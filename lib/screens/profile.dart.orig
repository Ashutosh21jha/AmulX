import 'package:adaptive_theme/adaptive_theme.dart';
import 'package:amul/Utils/AppColors.dart';
import 'package:amul/screens/signupPage.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:get/get.dart';
import 'package:image_picker/image_picker.dart';
import 'profile_screens/about.dart';
import 'profile_screens/terms.dart';
import 'profile_screens/privacy.dart';
import 'profile_screens/editprofile.dart';
import 'profile_screens/faq.dart';
import 'dart:io';
import 'profile_screens/profile_card.dart';
import 'package:firebase_storage/firebase_storage.dart';

final auth = FirebaseAuth.instance;
final db = FirebaseFirestore.instance;

String get userId => auth.currentUser?.email ?? '';

Future<void> signOut() async {
  try {
    print(auth.currentUser?.uid);
    await auth.signOut();
  } catch (e) {
    throw Exception(e);
  }
}

const EdgeInsets _paddingButtons =
    EdgeInsets.symmetric(horizontal: 12, vertical: 8);

const List<BoxShadow> _shadows = [
  BoxShadow(
    color: Color(0x28606170),
    blurRadius: 4,
    offset: Offset(0, 2),
    spreadRadius: 0,
  ),
  BoxShadow(
    color: Color(0x0A28293D),
    blurRadius: 1,
    offset: Offset(0, 0),
    spreadRadius: 0,
  )
];

class Profile extends StatefulWidget {
  const Profile({super.key});

  @override
  State<Profile> createState() => _ProfileState();
}

class _ProfileState extends State<Profile> {
  String name = "";
  String s_id = "";
  RxString? imageUrl = ''.obs;
  late AppColors2 appColors = Theme.of(context).extension<AppColors2>()!;
  late bool _isDarkMode =
      AdaptiveTheme.of(context).brightness == Brightness.dark ? true : false;

  @override
  void initState() {
    super.initState();
    receivedata();
    getProfilePicture();
  }

  Future<void> uploadImageToFirebase(XFile image) async {
    File imageFile = File(image.path);

    try {
      await FirebaseStorage.instance
          .ref('user/pp_$userId.jpg')
          .putFile(imageFile);
      setState(() {});
    } on FirebaseException catch (e) {
      print(e);
    }
  }

  Future<void> pickImage() async {
    final ImagePicker _picker = ImagePicker();
    final XFile? image = await _picker.pickImage(
        source: ImageSource.gallery, maxWidth: 500, maxHeight: 500);

    if (image != null) {
      uploadImageToFirebase(image);
    }
  }

  Future<void> receivedata() async {
    final docRef = await db.collection("User").doc(userId).get();
    Map<String, dynamic>? userData = docRef.data() as Map<String, dynamic>?;
    if (userData != null) {
      if (mounted) {
        setState(() {
          name = userData['name'] ?? '';
          s_id = userData['student id'] ?? '';
        });
      }
    }
  }

  Future<void> getProfilePicture() async {
    FirebaseStorage storage = FirebaseStorage.instance;

    var ref = storage.ref('user/pp_$userId.jpg');
    // var metadata = await ref.getMetadata().onError((error, stackTrace) {
    //   return Future.value(null);
    // });
    var metadata = await ref.getData().onError((error, stackTrace) {
      return null;
    });

    String downloadURL = await ref.getDownloadURL();
    imageUrl!.value = downloadURL;

    // if (metadata != null) {
    //   String downloadURL = await ref.getDownloadURL();
    //   yield NetworkImage(downloadURL);
    // } else {
    //   yield const AssetImage('assets/images/avatar.png');
    // }

    // await Future.delayed(const Duration(seconds: 2));
  }

  @override
  Widget build(BuildContext context) {
    SystemChrome.setSystemUIOverlayStyle(
      const SystemUiOverlayStyle(
        statusBarColor: Colors.transparent,
        statusBarIconBrightness: Brightness.light,
      ),
    );
    return Scaffold(
      body: Column(
        children: [
          Container(
            height: 60,
            decoration: const BoxDecoration(
              gradient: LinearGradient(
                begin: Alignment.centerLeft,
                end: Alignment.centerRight,
                colors: [
                  Color(0xFF00084B),
                  Color(0xFF2E55C0),
                  Color(0xFF148BFA),
                ],
              ),
              /* borderRadius: BorderRadius.only(
                bottomLeft: Radius.circular(80),
                bottomRight: Radius.circular(80),
              ),*/
            ),
          ),
          Container(
            height: 75,
            decoration: const BoxDecoration(
              gradient: LinearGradient(
                begin: Alignment.centerLeft,
                end: Alignment.centerRight,
                colors: [
                  Color(0xFF00084B),
                  Color(0xFF2E55C0),
                  Color(0xFF148BFA),
                ],
              ),
              /* borderRadius: BorderRadius.only(
                bottomLeft: Radius.circular(80),
                bottomRight: Radius.circular(80),
              ),*/
            ),
            child: Center(
              child: Text(
                'My Profile',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 18,
                  fontFamily: 'Epilogue',
                  fontWeight: FontWeight.w700,
                  height: 0.06,
                ),
              ),
            ),
          ),
          Stack(
            children: [
              Container(
                height: 45,
                decoration: const BoxDecoration(
                  gradient: LinearGradient(
                    begin: Alignment.centerLeft,
                    end: Alignment.centerRight,
                    colors: [
                      Color(0xFF00084B),
                      Color(0xFF2E55C0),
                      Color(0xFF148BFA),
                    ],
                  ),
                  borderRadius: BorderRadius.only(
                    bottomLeft: Radius.elliptical(40, 20),
                    bottomRight: Radius.elliptical(40, 20),
                  ),
                ),
              ),
              Align(
                child: SingleChildScrollView(
                  child: Column(
                      crossAxisAlignment: CrossAxisAlignment.center,
                      children: [
                        Container(
                          // width: MediaQuery.of(context).size.width * .6,
                          padding: const EdgeInsets.symmetric(
                              horizontal: 36, vertical: 8),
                          decoration: ShapeDecoration(
                            color: Colors.white,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(40),
                            ),
                            shadows: _shadows,
                          ),
                          child: Row(
                            mainAxisSize: MainAxisSize.min,
                            mainAxisAlignment: MainAxisAlignment.center,
                            crossAxisAlignment: CrossAxisAlignment.center,
                            children: [
                              SizedBox(
                                width: 60,
                                height: 60,
                                child: Stack(
                                  children: [
                                    Positioned(
                                        left: 0,
                                        top: 0,
                                        child: Obx(
                                          () {
                                            if (imageUrl!.value.isNotEmpty) {
                                              return Stack(
                                                children: [
                                                  Container(
                                                    width: 60,
                                                    height: 60,
                                                    decoration: BoxDecoration(
                                                      shape: BoxShape.circle,
                                                      image: DecorationImage(
                                                        image: NetworkImage(
                                                            imageUrl!.value),
                                                        fit: BoxFit.cover,
                                                      ),
                                                    ),
                                                  ),
                                                  Positioned(
                                                    bottom: 0,
                                                    right: 0,
                                                    child: Container(
                                                      width: 22,
                                                      height: 22,
                                                      decoration:
                                                          const BoxDecoration(
                                                        shape: BoxShape.circle,
                                                        color: AppColors.yellow,
                                                      ),
                                                      child: InkWell(
                                                        onTap: () {
                                                          pickImage();
                                                        },
                                                        child: const Icon(
                                                          Icons.edit,
                                                          color: Colors.white,
                                                          size: 12,
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              );
                                            } else {
                                              return const SizedBox(
                                                height: 60,
                                                width: 60,
                                                child: Center(
                                                  child:
                                                      CircularProgressIndicator(
                                                    color: AppColors.blue,
                                                  ),
                                                ),
                                              );
                                            }
                                          },
                                        )),
                                  ],
                                ),
                              ),
                              const SizedBox(width: 16),
                              StreamBuilder(
                                  stream: db
                                      .collection("User")
                                      .doc(userId)
                                      .snapshots(),
                                  builder: (BuildContext context,
                                      AsyncSnapshot snapshot) {
                                    if (snapshot.data == null) {
                                      return const Center(
                                          child: CircularProgressIndicator());
                                    } else {
                                      return Column(
                                        mainAxisAlignment:
                                            MainAxisAlignment.center,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            snapshot.data['name'],
                                            style: const TextStyle(
                                              color: Color(0xFF414042),
                                              fontSize: 18,
                                              fontFamily: 'Epilogue',
                                              fontWeight: FontWeight.w700,
                                            ),
                                          ),
                                          const SizedBox(height: 8),
                                          Text(
                                            snapshot.data['student id'],
                                            style: const TextStyle(
                                              color: Color(0xFF57585B),
                                              fontSize: 14,
                                              fontFamily: 'Epilogue',
                                              fontWeight: FontWeight.w400,
                                              height: 0.07,
                                            ),
                                            textAlign: TextAlign.center,
                                          ),
                                        ],
                                      );
                                    }
                                  }),
                            ],
                          ),
                        ),
                        TextButton.icon(
                          onPressed: () {
                            AdaptiveTheme.of(context)
                                .toggleThemeMode(useSystem: false);
                            setState(() {
                              _isDarkMode = !_isDarkMode;
                              appColors =
                                  Theme.of(context).extension<AppColors2>()!;
                            });
                          },
                          label: Text(
                            _isDarkMode ? "Dark Mode" : "Light Mode",
                            style: TextStyle(
                                color: _isDarkMode
                                    ? Colors.white70
                                    : Colors.black),
                          ),
                          icon: Icon(
                            _isDarkMode ? Icons.dark_mode : Icons.light_mode,
                            color: _isDarkMode ? Colors.white70 : Colors.black,
                          ),
                        ),
                        const SizedBox(height: 32),
                        // PROFILE
                        ProfileCard(
                            icon: Icons.person,
                            text: "Profile",
                            textColor: appColors.whiteText,
                            top: true,
                            screen: EditProfile(
                              parentImageUrl: imageUrl!,
                            ),
                            iconColor: const Color(0xFFA287F8)),
                        // const SizedBox(height: 4),
                        // ABOUT US
                        ProfileCard(
                            icon: Icons.info_outline,
                            text: "About Us",
                            textColor: appColors.whiteText,
                            screen: const About(),
                            iconColor: const Color(0xFF02B9F0)),
                        // const SizedBox(height: 4),
                        // FAQ
                        ProfileCard(
                            icon: Icons.question_answer_outlined,
                            text: "FAQ",
                            textColor: appColors.whiteText,
                            screen: Faq(),
                            iconColor: const Color(0xFFFC6DBB)),
                        // const SizedBox(height: 4),
                        // TERMS AND CONDITION
                        ProfileCard(
                            icon: Icons.file_copy,
                            text: "Terms and Conditions",
                            textColor: appColors.whiteText,
                            screen: const Terms(),
                            iconColor: const Color(0xFF3BA889)),
                        // const SizedBox(height: 4),
                        // PRIVACY POLICY
<<<<<<< HEAD
                        // ProfileCard(
                        //     icon: Icons.shield_outlined,
                        //     text: "Privacy Policy",
                        //     screen: const Privacy(),
                        //     iconColor: const Color(0xFFFBBC04)),
||||||| 2d77611
                        ProfileCard(
                            icon: Icons.shield_outlined,
                            text: "Privacy Policy",
                            screen: const Privacy(),
                            iconColor: const Color(0xFFFBBC04)),
=======
                        //  ProfileCard(
                        //      icon: Icons.shield_outlined,
                        //     text: "Privacy Policy",
                        //     textColor: appColors.whiteText,
                        //     screen: const Privacy(),
                        //     iconColor: const Color(0xFFFBBC04)),
>>>>>>> darkMode
                        // const SizedBox(height: 4),
                        // LOGOUT
                        ProfileCard(
                          icon: Icons.logout,
                          text: "Logout",
                          bottom: true,
                          screen: signupPage(),
                          iconColor: const Color(0xFFF57878),
                          textColor: Color(0xFFF46363),
                        ),
                        // InkWell(
                        //   onTap: () => signOut().then((value) {
                        //     Navigator.push(
                        //         context,
                        //         MaterialPageRoute(
                        //           builder: (context) => const signupPage(),
                        //         ));
                        //   }),
                        //   child: Container(
                        //     width: 327,
                        //     padding: _paddingButtons,
                        //     decoration: ShapeDecoration(
                        //       color: Colors.white,
                        //       shape: RoundedRectangleBorder(
                        //         side: const BorderSide(
                        //             width: 1, color: Color(0xFFF3F3F3)),
                        //         borderRadius: BorderRadius.circular(12),
                        //       ),
                        //       shadows: _shadows,
                        //     ),
                        //     child: Row(
                        //       mainAxisSize: MainAxisSize.min,
                        //       mainAxisAlignment: MainAxisAlignment.center,
                        //       crossAxisAlignment: CrossAxisAlignment.center,
                        //       children: [
                        //         Container(
                        //           padding: const EdgeInsets.all(4),
                        //           decoration: ShapeDecoration(
                        //             color: const Color(0xFFF57878),
                        //             shape: RoundedRectangleBorder(
                        //                 borderRadius: BorderRadius.circular(8)),
                        //           ),
                        //           child: Row(
                        //             mainAxisSize: MainAxisSize.min,
                        //             mainAxisAlignment: MainAxisAlignment.start,
                        //             crossAxisAlignment:
                        //                 CrossAxisAlignment.start,
                        //             children: [
                        //               Row(
                        //                 mainAxisSize: MainAxisSize.min,
                        //                 mainAxisAlignment:
                        //                     MainAxisAlignment.center,
                        //                 crossAxisAlignment:
                        //                     CrossAxisAlignment.center,
                        //                 children: [
                        //                   Container(
                        //                     width: 24,
                        //                     height: 24,
                        //                     clipBehavior: Clip.antiAlias,
                        //                     decoration: const BoxDecoration(),
                        //                     child: const Icon(
                        //                       Icons.logout,
                        //                       color: Colors.white,
                        //                       size: 20,
                        //                     ),
                        //                   ),
                        //                 ],
                        //               ),
                        //             ],
                        //           ),
                        //         ),
                        //         const SizedBox(width: 16),
                        //         const Expanded(
                        //           child: SizedBox(
                        //             child: Text(
                        //               'Logout',
                        //               style: TextStyle(
                        //                 color: Color(0xFFF46363),
                        //                 fontSize: 16,
                        //                 fontFamily: 'Epilogue',
                        //                 fontWeight: FontWeight.w400,
                        //                 height: 0.08,
                        //               ),
                        //             ),
                        //           ),
                        //         ),
                        //       ],
                        //     ),
                        //   ),
                        // ),

                        const SizedBox(height: 16),
                        Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Image.asset(
                              'assets/images/devcommlogo_noBG.png',
                              height: 50,
                              width: 50,
                            ),
                            Text(
                              "Powered by\nDevComm",
                              style: TextStyle(fontSize: 10),
                            ),
                          ],
                        ),
                      ]),
                ),
              ),
            ],
          )
        ],
      ),
    );
  }
}
